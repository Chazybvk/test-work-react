import React, { useState, useEffect } from 'react'
import './RequestForm.css'

const RequestForm = ({ onClose }) => {
  const [name, setName] = useState('')
  const [email, setEmail] = useState('')
  const [phone, setPhone] = useState('')
  const [description, setDescription] = useState('')
  const [files, setFiles] = useState([])
  const [emailError, setEmailError] = useState('')
  const [fileError, setFileError] = useState('')
  const [isSubmitted, setIsSubmitted] = useState(false)

  // –í–∞–ª–∏–¥–∞—Ü–∏—è email
  const validateEmail = (email) => {
    const regex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/
    return regex.test(email)
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è email
  const handleEmailChange = (e) => {
    const value = e.target.value
    setEmail(value)
    if (!validateEmail(value)) {
      setEmailError('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email')
    } else {
      setEmailError('')
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–æ–≤
  const handleFileChange = (e) => {
    const selectedFiles = Array.from(e.target.files)
    if (selectedFiles.length > 3) {
      setFileError('–ú–∞–∫—Å–∏–º—É–º 3 —Ñ–∞–π–ª–∞')
      return
    }

    const validFiles = selectedFiles.filter((file) => {
      if (file.size > 5 * 1024 * 1024) {
        setFileError('–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–π –æ–±—ä–µ–º —Ñ–∞–π–ª–∞ (>5MB)')
        return false
      }
      if (!['image/jpeg', 'image/png'].includes(file.type)) {
        setFileError('–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞')
        return false
      }
      return true
    })

    if (validFiles.length > 0) {
      setFiles(validFiles)
      setFileError('')
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã
  const handleSubmit = (e) => {
    e.preventDefault()
    if (validateEmail(email) && files.length <= 3) {
      console.log('–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:', {
        name,
        email,
        phone,
        description,
        files,
      })
      setIsSubmitted(true)
      setTimeout(() => {
        setIsSubmitted(false)
        onClose()
      }, 2000)
    } else {
      console.log('–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏')
    }
  }

  // –ó–∞–∫—Ä—ã—Ç–∏–µ —Ñ–æ—Ä–º—ã –ø—Ä–∏ –∫–ª–∏–∫–µ –Ω–∞ –∑–∞—Ç–µ–º–Ω–µ–Ω–Ω—É—é –æ–±–ª–∞—Å—Ç—å
  const handleOverlayClick = (e) => {
    if (e.target === e.currentTarget) {
      onClose()
    }
  }

  return (
    <div className="request-form-overlay" onClick={handleOverlayClick}>
      <div className="request-form">
        {/* –ö—Ä–µ—Å—Ç–∏–∫ –¥–ª—è –∑–∞–∫—Ä—ã—Ç–∏—è —Ñ–æ—Ä–º—ã (–≤–Ω–µ —Ñ–æ—Ä–º—ã) */}
        <button className="close-button" onClick={onClose}>
          <svg
            width="12"
            height="12"
            viewBox="0 0 12 12"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M1 1L11 11M11 1L1 11"
              stroke="white"
              strokeWidth="2"
              strokeLinecap="round"
            />
          </svg>
        </button>
        {/* –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ */}
        {isSubmitted ? (
          <div className="success-message">
            <p>–°–ø–∞—Å–∏–±–æ! –ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.</p>
          </div>
        ) : (
          <form onSubmit={handleSubmit}>
            {/* –ü–∞—Ä–∞–≥—Ä–∞—Ñ —Ç–µ–∫—Å—Ç–∞ */}
            <p className="form-text">
              –£—Å–ø–µ—Ö –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π. –û—Å—Ç–∞–≤—å—Ç–µ –∑–¥–µ—Å—å —Å–≤–æ–∏
              –∫–æ–Ω—Ç–∞–∫—Ç—ã, –∏ –º—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏, —á—Ç–æ–±—ã –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –æ–ø—Ç–∏–º–∞–ª—å–Ω—É—é
              —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—é –ø–æ —É–≤–µ–ª–∏—á–µ–Ω–∏—é –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –∏–∑–≤–ª–µ–∫–∞–µ–º–æ—Å—Ç–∏ –ø–æ–ª–µ–∑–Ω–æ–≥–æ –≤
              –∫–æ–Ω–µ—á–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç –Ω–∞ –≤–∞—à–µ–º –ø—Ä–µ–¥–ø—Ä–∏—è—Ç–∏–∏.
            </p>

            {/* Input "–ò–º—è*" */}
            <input
              type="text"
              placeholder="–ò–º—è*"
              value={name}
              onChange={(e) => setName(e.target.value)}
              required
            />

            {/* Input "E-Mail*" */}
            <input
              type="email"
              placeholder="E-Mail*"
              value={email}
              onChange={handleEmailChange}
              required
            />
            {emailError && <span className="error-message">{emailError}</span>}

            {/* Input "–¢–µ–ª–µ—Ñ–æ–Ω*" */}
            <input
              type="tel"
              placeholder="–¢–µ–ª–µ—Ñ–æ–Ω*"
              value={phone}
              onChange={(e) => setPhone(e.target.value)}
              required
            />

            {/* Input "–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞*" */}
            <textarea
              placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞*"
              value={description}
              onChange={(e) => setDescription(e.target.value)}
              required
              style={{ height: '39px', minHeight: '39px' }}
            />

            {/* Input "–ü—Ä–∏–ª–æ–∂–∏—Ç—å —Ñ–∞–π–ª—ã" */}
            <div className="file-input-container">
              <input
                type="file"
                id="file-input"
                onChange={handleFileChange}
                multiple
                accept=".jpg, .png"
                style={{ display: 'none' }}
              />
              <label htmlFor="file-input" className="file-input-label">
                {files.length > 0
                  ? `–ó–∞–≥—Ä—É–∂–µ–Ω–æ ${files.length} —Ñ–∞–π–ª(–æ–≤)`
                  : '–ü—Ä–∏–ª–æ–∂–∏—Ç—å —Ñ–∞–π–ª—ã (–î–æ –¢—Ä–µ—Ö –§–∞–π–ª–æ–≤)'}
                <span className="paperclip-icon">üìé</span>
              </label>
              {fileError && <span className="error-message">{fileError}</span>}
            </div>

            {/* –¢–µ–∫—Å—Ç –ø–æ–ª–∏—Ç–∏–∫–∏ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ */}
            <p className="privacy-policy">
              –û—Ç–ø—Ä–∞–≤–ª—è—è —ç—Ç—É —Ñ–æ—Ä–º—É, —è –ø—Ä–∏–Ω–∏–º–∞—é{' '}
              <a
                href="/privacy-policy"
                target="_blank"
                rel="noopener noreferrer"
              >
                –ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
              </a>{' '}
              —ç—Ç–æ–≥–æ —Å–∞–π—Ç–∞.
            </p>

            {/* –ö–Ω–æ–ø–∫–∞ "–û—Ç–ø—Ä–∞–≤–∏—Ç—å" */}
            <button
              type="submit"
              className="submit-button"
              disabled={!validateEmail(email) || files.length > 3}
            >
              –û—Ç–ø—Ä–∞–≤–∏—Ç—å
            </button>
          </form>
        )}
      </div>
    </div>
  )
}

export default RequestForm
